name: CI

env:
  GO_VERSION: '1.24'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-matrix.outputs.services }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            teamhub:
              - 'teamhub/**'
            coursemaker:
              - 'coursemaker/**'
            coursereader:
              - 'coursereader/**'
            roadbuilder:
              - 'roadbuilder/**'
            skilltracker:
              - 'skilltracker/**'
            searchengine:
              - 'searchengine/**'
      - id: set-matrix
        shell: bash
        run: |
          services=()
          # если filter.outputs.<service> == 'true', добавляем сервис в JSON-массив
          for svc in teamhub coursemaker coursereader roadbuilder skilltracker searchengine; do
            if [[ "${{ steps.filter.outputs[$svc] }}" == 'true' ]]; then
              services+=("\"$svc\"")
            fi
          done

          if [[ ${#services[@]} -eq 0 ]]; then
            echo "services=[]" >> $GITHUB_OUTPUT
          else
            # получаем что-то вида ["teamhub","coursereader",…]
            echo "services=[${services[*]}]" >> $GITHUB_OUTPUT
          fi

  lint:
    needs: detect_changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [teamhub, coursemaker, coursereader, roadbuilder, skilltracker, searchengine]
    steps:
      - name: Check if ${{ matrix.service }} changed
        id: check
        run: |
          echo "changed=${{ contains(fromJson(needs.detect_changes.outputs.services), matrix.service) }}" >> $GITHUB_OUTPUT

      - name: Skip lint for ${{ matrix.service }}
        if: ${{ steps.check.outputs.changed != 'true' }}
        run: echo "→ ${{ matrix.service }} unchanged, skipping lint."

      - name: Checkout
        if: ${{ steps.check.outputs.changed == 'true' }}
        uses: actions/checkout@v4

      - name: Setup Go
        if: ${{ steps.check.outputs.changed == 'true' }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install golangci-lint
        if: ${{ steps.check.outputs.changed == 'true' }}
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Lint ${{ matrix.service }}
        if: ${{ steps.check.outputs.changed == 'true' }}
        run: |
          cd ${{ matrix.service }}
          golangci-lint run \
            --config .golangci.yml \
            --out-format colored-line-number

  test:
    needs: detect_changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [teamhub, coursemaker, coursereader, roadbuilder, skilltracker, searchengine]
    steps:
      - name: Check if ${{ matrix.service }} changed
        id: check
        run: |
          echo "changed=${{ contains(fromJson(needs.detect_changes.outputs.services), matrix.service) }}" >> $GITHUB_OUTPUT

      - name: Skip tests for ${{ matrix.service }}
        if: ${{ steps.check.outputs.changed != 'true' }}
        run: echo "→ ${{ matrix.service }} unchanged, skipping tests."

      - name: Checkout
        if: ${{ steps.check.outputs.changed == 'true' }}
        uses: actions/checkout@v4

      - name: Setup Go
        if: ${{ steps.check.outputs.changed == 'true' }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Test ${{ matrix.service }}
        if: ${{ steps.check.outputs.changed == 'true' }}
        run: |
          cd ${{ matrix.service }}
          go test ./...

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [teamhub, coursemaker, coursereader, roadbuilder, skilltracker, searchengine]
    steps:
      - name: Check if ${{ matrix.service }} changed
        id: check
        run: |
          echo "changed=${{ contains(fromJson(needs.detect_changes.outputs.services), matrix.service) }}" >> $GITHUB_OUTPUT

      - name: Skip build for ${{ matrix.service }}
        if: ${{ steps.check.outputs.changed != 'true' }}
        run: echo "→ ${{ matrix.service }} unchanged, skipping build."

      - name: Checkout
        if: ${{ steps.check.outputs.changed == 'true' }}
        uses: actions/checkout@v4

      - name: Setup Go
        if: ${{ steps.check.outputs.changed == 'true' }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build ${{ matrix.service }}
        if: ${{ steps.check.outputs.changed == 'true' }}
        run: |
          cd ${{ matrix.service }}
          go build -o bin/${{ matrix.service }} .
