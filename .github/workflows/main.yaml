name: CI

env:
  GO_VERSION: '1.24'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      teamhub:      ${{ steps.filter.outputs.teamhub }}
      coursemaker:  ${{ steps.filter.outputs.coursemaker }}
      coursereader: ${{ steps.filter.outputs.coursereader }}
      roadbuilder:  ${{ steps.filter.outputs.roadbuilder }}
      skilltracker: ${{ steps.filter.outputs.skilltracker }}
      searchengine: ${{ steps.filter.outputs.searchengine }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            teamhub:
              - 'teamhub/**'
            coursemaker:
              - 'coursemaker/**'
            coursereader:
              - 'coursereader/**'
            roadbuilder:
              - 'roadbuilder/**'
            skilltracker:
              - 'skilltracker/**'
            searchengine:
              - 'searchengine/**'

  lint:
    needs: detect_changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [teamhub, coursemaker, coursereader, roadbuilder, skilltracker, searchengine]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Lint ${{ matrix.service }}
        if: ${{ needs.detect_changes.outputs[matrix.service] == 'true' }}
        run: |
          cd ${{ matrix.service }}
          golangci-lint run --config .golangci.yml --out-format colored-line-number .

  test:
    needs: detect_changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [teamhub, coursemaker, coursereader, roadbuilder, skilltracker, searchengine]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Test ${{ matrix.service }}
        if: ${{ needs.detect_changes.outputs[matrix.service] == 'true' }}
        run: |
          cd ${{ matrix.service }}
          go test ./...

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [teamhub, coursemaker, coursereader, roadbuilder, skilltracker, searchengine]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build ${{ matrix.service }}
        if: ${{ needs.detect_changes.outputs[matrix.service] == 'true' }}
        run: |
          cd ${{ matrix.service }}
          go build -o bin/${{ matrix.service }} .
