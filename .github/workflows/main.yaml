name: CI

env:
  GO_VERSION: '1.24'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.build-matrix.outputs.services }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            teamhub:
              - 'teamhub/**'
            coursemaker:
              - 'coursemaker/**'
            coursereader:
              - 'coursereader/**'
            roadbuilder:
              - 'roadbuilder/**'
            skilltracker:
              - 'skilltracker/**'
            searchengine:
              - 'searchengine/**'
      - id: build-matrix
        run: |
          services=()
          if [ "${{ steps.filter.outputs.teamhub }}" = 'true' ]; then services+=('"teamhub"'); fi
          if [ "${{ steps.filter.outputs.coursemaker }}" = 'true' ]; then services+=('"coursemaker"'); fi
          if [ "${{ steps.filter.outputs.coursereader }}" = 'true' ]; then services+=('"coursereader"'); fi
          if [ "${{ steps.filter.outputs.roadbuilder }}" = 'true' ]; then services+=('"roadbuilder"'); fi
          if [ "${{ steps.filter.outputs.skilltracker }}" = 'true' ]; then services+=('"skilltracker"'); fi
          if [ "${{ steps.filter.outputs.searchengine }}" = 'true' ]; then services+=('"searchengine"'); fi
          json=$(printf '[%s]' "$(IFS=,; echo "${services[*]}")")
          echo "services=$json" >> $GITHUB_OUTPUT

  lint:
    needs: detect_changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect_changes.outputs.services) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Lint
        run: |
          cd ${{ matrix.service }}
          golangci-lint run --config .golangci.yml --out-format colored-line-number .

  test:
    needs: detect_changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect_changes.outputs.services) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Test
        run: |
          cd ${{ matrix.service }}
          go test ./...

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect_changes.outputs.services) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build
        run: |
          cd ${{ matrix.service }}
          go build -o bin/${{ matrix.service }} .
