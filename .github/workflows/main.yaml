name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
env:
  GO_VERSION: '1.24'

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-services.outputs.services }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            coursemaker:  [ 'coursemaker/**' ]
            coursereader: [ 'coursereader/**' ]
            roadbuilder:  [ 'roadbuilder/**' ]
            searchengine: [ 'searchengine/**' ]
            skilltracker: [ 'skilltracker/**' ]
            teamhub:      [ 'teamhub/**' ]
      - id: set-services
        run: |
          services="["
          if [[ "${{ steps.filter.outputs.coursemaker }}"  == "true" ]]; then services+="\"coursemaker\",";  fi
          if [[ "${{ steps.filter.outputs.coursereader }}" == "true" ]]; then services+="\"coursereader\","; fi
          if [[ "${{ steps.filter.outputs.roadbuilder }}"  == "true" ]]; then services+="\"roadbuilder\",";  fi
          if [[ "${{ steps.filter.outputs.searchengine }}" == "true" ]]; then services+="\"searchengine\","; fi
          if [[ "${{ steps.filter.outputs.skilltracker }}" == "true" ]]; then services+="\"skilltracker\","; fi
          if [[ "${{ steps.filter.outputs.teamhub }}"      == "true" ]]; then services+="\"teamhub\",";      fi
          services="${services%,}"
          services+="]"
          echo "services=$services" >> $GITHUB_OUTPUT

  lint:
    needs: filter
    if: ${{ needs.filter.outputs.services != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.filter.outputs.services) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: golangci/golangci-lint-action@v3
        with:
          version: v1.64.8
          args: >-
            --config ./.golangci.yml
            ./${{ matrix.service }}/...

  test:
    needs: filter
    if: ${{ needs.filter.outputs.services != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.filter.outputs.services) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          go test -v ./${{ matrix.service }}/...

  build:
    needs:
      - lint
      - test
    if: ${{ needs.filter.outputs.services != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.filter.outputs.services) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          go build -o bin/${{ needs.filter.outputs.changed_service }} ./${{ needs.filter.outputs.changed_service }}
